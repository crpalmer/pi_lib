if("${PLATFORM}" STREQUAL "pico")
  set(PICO_BOARD pico_w)
  add_compile_definitions("WIFI_SSID=\"$ENV{WIFI_SSID}\"" "WIFI_PASSWORD=\"$ENV{WIFI_PASSWORD}\"")
  add_compile_definitions("PICO_MAX_SHARED_IRQ_HANDLERS=8")
  add_compile_definitions("WEEN_BOARD=0")
  set(PLATFORM_DIR "pico")
elseif("${PLATFORM}" STREQUAL "linux")
  add_compile_definitions(PLATFORM_pi)
  add_compile_definitions("WEEN_BOARD=0")
  set(PLATFORM_DIR "pi")
elseif("${PLATFORM}" STREQUAL "pi")
  if(DEFINED WEEN_BOARD)
     add_compile_definitions("WEEN_BOARD=${WEEN_BOARD}")
  else()
     add_compile_definitions("WEEN_BOARD=1")
  endif()
  set(PLATFORM_DIR "pi")
else()
  message(FATAL_ERROR "You must specify a PLATFORM variable: 'pi' or 'pico'")
endif()

add_compile_definitions(PLATFORM_${PLATFORM})
add_compile_options(-Wall -Werror)

function(platform_executable targetName)
  if("${PLATFORM}" STREQUAL "pico")
    pico_enable_stdio_usb(${targetName} 1)
    pico_enable_stdio_uart(${targetName} 1)
    # create map/bin/hex file etc.
    pico_add_extra_outputs(${targetName})
  elseif("${PLATFORM}" STREQUAL "linux")
  elseif("${PLATFORM}" STREQUAL "pi")
  else()
    message(FATAL_ERROR "You must specify a PLATFORM variable: 'pi' or 'pico'")
  endif()
endfunction()

macro(SDK_INTERFACE_LIBS target)
  foreach(lib IN ITEMS ${ARGN})
     target_link_libraries(${target} PRIVATE ${lib}_headers INTERFACE ${lib})
  endforeach()
endmacro()
